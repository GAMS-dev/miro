stages:
  - test
  - deploy

image:
  name: registry.gams.com/fproske/gmswebui/gamsmiro-ci:latest

lint_job:
  tags:
   - linux
  stage: test
  script:
   - pre-commit run --all-files
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
      - ${PRE_COMMIT_HOME}
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: always

test_job_api:
  tags:
    - linux
  stage: test
  image: docker:20.10
  services:
    - name: docker:20.10-dind
    - name: postgres:12.1-alpine
      alias: postgres
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    FF_NETWORK_PER_BUILD: "true"
    GMS_MIRO_DATABASE_HOST: postgres
    GMS_MIRO_DATABASE: miroapitests
    GMS_MIRO_DATABASE_USER: mirotests
    GMS_MIRO_DATABASE_PWD: mirotests
    POSTGRES_DB: $GMS_MIRO_DATABASE
    POSTGRES_USER: $GMS_MIRO_DATABASE_USER
    POSTGRES_PASSWORD: $GMS_MIRO_DATABASE_PWD
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    # this is to be able to pull and push images
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/miro-auth-test:unstable && docker tag ${CI_REGISTRY_IMAGE}/miro-auth-test:unstable miro-auth-test || exit 1
    - ./test/run-api-tests.sh
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft:/
      when: manual
    - if: $CI_MERGE_REQUEST_ID

test_job:
  tags:
    - linux
  stage: test
  services:
    - name: postgres:12.1-alpine
  variables:
    MIRO_STOP_TESTS_ON_FAILURE: "false"
    MIRO_DB_TYPE: postgres
    MIRO_DB_HOST: postgres
    MIRO_DB_NAME: mirotests
    MIRO_DB_USERNAME: mirotests
    MIRO_DB_PASSWORD: mirotests
    POSTGRES_DB: $MIRO_DB_NAME
    POSTGRES_USER: $MIRO_DB_USERNAME
    POSTGRES_PASSWORD: $MIRO_DB_PASSWORD
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - source /etc/profile.d/ci.sh
    - yarn install --cache-folder .yarn
  script:
    - yarn run eslint .
    - mchecklic
    - mtestall
  interruptible: true
  cache:
    paths:
      - node_modules/
      - .yarn
  artifacts:
    when: always
    reports:
      junit: src/tests/testthat/test-out.xml
    paths:
      - src/tests/logs-tests
    expire_in: 1 week
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft:/
      when: manual
    - if: $CI_MERGE_REQUEST_ID

update_doc_job:
  tags:
    - linux
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - rsync -rlptvz -e "ssh -o StrictHostKeyChecking=no" doc/* ubuntu@new.gams.com:/var/www/html/staging.gams.com/public_html/miro
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: always
    - when: manual
    - allow_failure: true
  needs: []
