{  
   "$schema":"http://json-schema.org/draft-07/schema#",
   "title":"Configuration file schema",
   "description":"GAMS MIRO configuration file schema",
   "type":"object",
   "additionalProperties":false,
   "properties":{  
      "language":{  
         "description":"default language for MIRO",
         "type":"string",
         "default":"en",
         "enum":[  
            "de",
            "en"
         ],
         "required":false
      },
      "pageSkin":{  
         "description":"Skin used for shiny dashboard",
         "type":"string",
         "enum":[  
            "black",
            "blue",
            "purple",
            "green",
            "red",
            "yellow"
         ],
         "default":"black",
         "required":false
      },
      "includeParentDir":{
        "description":"Boolean which specifies whether to include the parent directory of the current model folder (e.g. because several models share files)",
         "type":"boolean",
         "default":false,
         "required":false
      },
      "excelIncludeMeta":{  
         "description":"Boolean which specifies whether to include a metadata sheet in the Excel file (exporting a scenario)",
         "type":"boolean",
         "default":true,
         "required":false
      },
      "excelIncludeEmptySheets":{  
         "description":"Boolean which specifies whether to include empty sheets in the Excel file",
         "type":"boolean",
         "default":true,
         "required":false
      },
      "defaultScenName":{
        "description":"Name of the default scenario that will be loaded on startup (leave empty, if you dont want a default scenario)",
         "type":"string",
         "required":false
      },
      "UILogo":{  
         "description":"String that specifies the name of the logo to use",
         "type":"string",
         "minLength":1,
         "default":"gams_logo.png",
         "required":false
      },
      "autoGenInputGraphs":{  
         "description":"Boolean which specifies whether to generate graphs for each input sheet automatically",
         "type":"boolean",
         "default":true,
         "required":false
      },
      "storeLogFilesDuration":{
        "description":"duration the GAMS log and lst files are stored in the database (in days). 0 means files are not stored at all, 999 means files are stored indefinitely. This setting is ignored when attachment module is not active. Not that this is currently only supported in the base mode.",
        "type":"integer",
        "minimum":0,
        "maximum":999,
        "default": 7
      },
      "extraClArgs":{
        "description":"Specify extra command line arguments that GAMS will be called with",
        "type":["array", "string"],
        "minLength":3,
        "required":false,
        "items":{
          "type":"string",
          "minLength":3
        }
      },
      "defCompMode":{  
         "description":"Specifies the default scenario comparison mode (the one that is loaded on startup).",
         "type":"string",
         "enum":[  
            "split",
            "tab"
         ],
         "default":"split",
         "required":false
      },
      "activateModules":{  
         "description":"Activate/deactivate certain modules",
         "type":"object",
         "additionalProperties":false,
         "properties":{
            "scenario":{  
               "description":"Activate scenario functionality?",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "strictmode":{  
               "description":"Launch App in strict mode? This results in throwing error messages instead of accepting possibly faulty user entries.",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "loadLocal":{  
               "description":"Activate local data upload module?",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "sharedScenarios":{  
               "description":"Enable scenario sharing between different users?",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "hcubeMode":{  
               "description":"Solve multiple scenarios in Hypercube mode?",
               "type":"boolean",
               "default":false,
               "required":false
            },
            "logFile":{  
               "description":"Show log file in UI?",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "lstFile":{  
               "description":"Show lst file in UI?",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "attachments":{
               "description": "Should users be allowed to add attachments to scenarios?",
               "type": "boolean",
               "default":true,
               "required":false
            }
         }
      },
      "aggregateWidgets":{
         "description": "Whether to aggregate all input widgets on a single tab",
         "type": "boolean",
         "default":true,
         "required":false
      },
      "scalarAliases":{  
         "description":"Specify the aliases for the input and output scalar tables",
         "type":"object",
         "additionalProperties":false,
         "properties":{  
            "inputScalars":{  
               "description":"Alias for the input scalar table",
               "type":"string",
               "minLength":"1",
               "required":false
            },
            "outputScalars":{  
               "description":"Alias for the output scalar table",
               "type":"string",
               "minLength":"1",
               "required":false
            }
         }
      },
      "hiddenOutputScalars": {
        "description":"Specify symbol names of output scalars that will not be displayed in UI but can be used in graphs etc.",
         "type":["array", "string"],
         "minLength":1,
         "uniqueItems":true,
         "required":false,
         "items":{
           "type":"string",
           "minLength": 1
         }
      },
      "saveTraceFile":{  
         "description":"Boolean which specifies whether trace file should be saved",
         "type":"boolean",
         "default":true,
         "required":false
      },
      "inputWidgets":{
        "description":"Format in which input or output data is to be displayed in MIRO.",
         "type":"object",
         "additionalProperties":{  
            "type":"object",
            "minProperties":1,
            "oneOf":[
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "slider"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "noHcube":{  
                    "description":"Boolean that specifies whether element should not be used in Hypercube mode",
                    "type":"boolean"
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean"
                   },
                   "label":{  
                     "description":"Label of considered inputdata",
                     "type":"string",
                     "minLength":1
                   },
                   "min":{  
                     "description":"Minimum value of inputdata",
                     "type":[  
                       "number",
                       "string"
                     ]
                   },
                   "max":{  
                     "description":"Maximum value of inputdata",
                     "type":[  
                       "number",
                       "string"
                     ]
                   },
                   "default":{  
                     "description":"Default/starting value of inputdata",
                     "required": true,
                     "type":[  
                       "number",
                       "string",
                       "array"
                     ]
                   },
                   "step":{  
                     "description":"Specifies the interval between each selectable value",
                     "type":[  
                       "number",
                       "string"
                     ]
                   },
                   "width":{  
                     "description":"Width of the slider (optional)",
                     "type":"number"
                   },
                   "ticks":{  
                     "description":"Boolean that specifies whether to hide or show tick marks (optional)",
                     "type":"boolean",
                     "required":false
                   },
                   "additionalProperties":false,
                   "required":[  
                      "widgetType", "step", "min", "max", "default"
                   ]
                  }
               },
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "dropdown"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "noHcube":{  
                    "description":"Boolean that specifies whether element should not be used in Hypercube mode",
                    "type":"boolean"
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean"
                   },
                   "label":{  
                      "description":"display label for the dropdown menu",
                      "type":"string",
                      "minLength":1
                    },
                    "choices":{  
                      "description":"List of values to select from.",
                      "type":[  
                        "array",
                        "string",
                        "number"
                      ],
                      "uniqueItems":true,
                      "minItems":1,
                      "required":true,
                      "items":{  
                        "type":[  
                          "string",
                          "number"
                        ]
                      }
                    },
                    "multiple":{  
                      "description":"Boolean that specifies whether multiple options are allowed to be selected in dropdown menu",
                      "type":"boolean"
                    },
                    "aliases":{  
                      "type":[  
                        "array",
                        "string"
                      ],
                      "minLength":1,
                      "uniqueItems":true,
                      "minItems":1,
                      "required":false,
                      "items":{  
                        "type":"string"
                      }
                    },
                    "selected":{  
                      "description":"The initially selected value.",
                      "type":[  
                        "string",
                        "number"
                      ]
                    },
                   "additionalProperties":false,
                   "required":[  
                      "widgetType"
                   ]
                  }
               },
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "date"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "noHcube":{  
                    "description":"Boolean that specifies whether element should not be used in Hypercube mode",
                    "type":"boolean"
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean"
                   },
                   "label":{  
                     "description":"display label for the date selector",
                     "type":"string",
                     "minLength":1
                   },
                   "value":{  
                     "description":"initial start date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "min":{  
                     "description":"minimum allowed date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "max":{  
                     "description":"maximum allowed date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "format":{  
                     "description":"format of the date to display in the browser.",
                     "type":"string",
                     "minLength":1,
                     "maxLength":10
                   },
                   "startview":{  
                     "description":"date range shown when the input object is first clicked",
                     "type":"string",
                     "enum":[  
                       "month",
                       "year",
                       "decade"
                     ]
                   },
                   "weekstart":{  
                     "description":"which day is displayed to be the first of the week ",
                     "type":"integer",
                     "minimum":0,
                     "maximum":6
                   },
                   "daysofweekdisabled":{
                     "description":"disallow certain days of week to be selected",
                     "type": "array",
                     "uniqueItems":true,
                     "minItems":1,
                     "items":{  
                       "type":"integer",
                       "minimum":0,
                       "maximum":6
                     }
                   },
                   "datesdisabled":{
                     "description":"disallow certain dates to be selected",
                     "type": "array",
                     "uniqueItems":true,
                     "minItems":1,
                     "items":{  
                       "type":"string",
                       "minLength":10,
                       "maxLength":10
                     }
                   },
                   "autoclose":{  
                     "description":"Whether or not to close the datepicker immediately when a date is selected",
                     "type":"boolean"
                   },
                   "width":{  
                     "description":"width of the input",
                     "type":[  
                       "string",
                       "integer"
                     ],
                     "minLength":1
                   },
                   "additionalProperties":false
                 }
               },
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "daterange"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "noHcube":{  
                    "description":"Boolean that specifies whether element should not be used in Hypercube mode",
                    "type":"boolean"
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean",
                    "required":false
                   },
                   "label":{  
                     "description":"display label for the daterange selector",
                     "type":"string",
                     "minLength":1
                   },
                   "start":{  
                     "description":"initial start date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "end":{  
                     "description":"initial end date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "min":{  
                     "description":"minimum allowed date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "max":{  
                     "description":"maximum allowed date",
                     "type":"string",
                     "minLength":10,
                     "maxLength":10
                   },
                   "format":{  
                     "description":"format of the date to display in the browser.",
                     "type":"string",
                     "minLength":1,
                     "maxLength":10
                   },
                   "startview":{  
                     "description":"date range shown when the input object is first clicked",
                     "type":"string",
                     "enum":[  
                       "month",
                       "year",
                       "decade"
                     ]
                   },
                   "weekstart":{  
                     "description":"which day is displayed to be the first of the week ",
                     "type":"integer",
                     "minimum":0,
                     "maximum":6
                   },
                   "separator":{  
                     "description":"String to display between the start and end input boxes",
                     "type":"string",
                     "minLength":1
                   },
                   "width":{  
                     "description":"width of the input",
                     "type":[  
                       "string",
                       "integer"
                     ],
                     "minLength":1
                   },
                   "autoclose":{  
                     "description":"Whether or not to close the datepicker immediately when a date is selected",
                     "type":"boolean"
                   },
                   "additionalProperties":false,
                   "required":[  
                      "widgetType"
                   ]
                 }
               },
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "checkbox"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "noHcube":{  
                    "description":"Boolean that specifies whether element should not be used in Hypercube mode",
                    "type":"boolean"
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean"
                   },
                   "label":{  
                     "description":"display label for the checkbox",
                     "type":"string",
                     "minLength":1
                   },
                   "value":{  
                     "description":"default value",
                     "type": "integer",
                     "minimum":0,
                     "maximum":1
                   },
                   "max":{  
                     "description":"Maximum allowed value",
                     "type":"string",
                     "minLength":3
                   },
                   "class":{  
                     "description":"css class",
                     "type":"string",
                     "minLength":1
                   },
                   "width":{  
                     "description":"width of the input",
                     "type":[  
                       "string",
                       "integer"
                     ],
                     "minLength":1
                   }
                 },
                 "additionalProperties":false,
                 "required":[  
                    "widgetType"
                 ]
               },
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "textinput"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean"
                   },
                   "label":{  
                     "description":"display label for the textinput",
                     "type":"string",
                     "minLength":1
                   },
                   "value":{  
                     "description":"default value",
                     "type": "string",
                     "minLength":1
                   },
                   "placeholder":{  
                     "description":"placeholder (e.g. to give more information about what kind of value is expected from user)",
                     "type":"string",
                     "minLength":1
                   },
                   "width":{  
                     "description":"width of the input",
                     "type":[  
                       "string",
                       "integer"
                     ],
                     "minLength":1
                   }
                 },
                 "additionalProperties":false,
                 "required":[  
                    "widgetType"
                 ]
               },
               {
                 "properties":{
                   "widgetType":{
                     "description":"Style of widget",
                     "type":"string",
                     "enum":[
                       "table"
                     ]
                   },
                   "alias":{  
                     "type":"string",
                     "minLength":1
                   },
                   "sharedData":{  
                     "description":"Choose whether data for this table should come from a shared table (across all scenarios)",
                     "type":"boolean",
                     "default": false
                   },
                   "noImport":{  
                    "description":"Boolean that specifies whether data should not be imported from external source",
                    "type":"boolean"
                   },
                   "readonly":{
                        "description":"Either true or false for entire table to be readonly",
                        "type":"boolean"
                    },
                    "heatmap":{
                        "description":"Turn table into a heatmap?",
                        "type":"boolean"
                    },
                    "readonlyCols":{
                      "description":"Either true or false for certain columns of table to be readonly",
                      "type":["array", "string"],
                      "minLength":1,
                      "items":{
                        "type":"string",
                        "minLength":1
                      }
                    }
                 },
                 "additionalProperties":false,
                 "required":[  
                    "widgetType"
                 ]
               }
            ]
         }
      },
      "dataRendering":{  
        "description":"Format in which input or output data is to be displayed in MIRO.",
         "type":"object",
         "additionalProperties":{  
            "type":"object",
            "minProperties":1,
            "oneOf":[
               {
                  "properties":{  
                     "outType":{  
                        "description":"Style of widget (table, pivottable, graph, graph+table).",
                        "type":"string",
                        "enum":[  
                           "datatable"
                        ]
                     },
                     "height":{  
                        "description":"Height of the output element.",
                        "type":"integer",
                        "minimum":0
                     }
                  },
                  "additionalProperties":false,
                  "required":[  
                     "outType"
                  ]
               },
               {  
                  "properties":{  
                     "outType":{  
                        "description":"Style of widget (table, pivottable, graph, graph+table).",
                        "type":"string",
                        "enum":[  
                           "valueBox"
                        ]
                     },
                     "options":{
                       "type": "object",
                       "additionalProperties":false,
                       "properties":{  
                        "width":{  
                           "description":"Width of the output element.",
                           "type":"integer",
                           "minimum":0,
                           "default":4
                        },
                        "color":{  
                           "type":"string",
                           "description":"Background color of value box",
                           "minLength":0,
                           "default":"aqua"
                        },
                        "icon":{  
                           "description":"icon for value box",
                           "type":"object",
                           "properties":{  
                              "name":{  
                                 "type":"string",
                                 "description":"Name of icon. Icons are drawn from the Font Awesome and Glyphicons libraries.",
                                 "minLength":0,
                                 "default":null
                              },
                              "lib":{  
                                 "type":"string",
                                 "description":"Name of library where icon is from.",
                                 "enum":[  
                                    "glyphicon",
                                    "font-awesome"
                                 ],
                                 "default":"font-awesome"
                              }
                           }
                        }
                       }
                     }
                  },
                  "additionalProperties":false,
                  "required":[  
                     "outType"
                  ]
               },
               {  
                  "properties":{  
                     "outType":{  
                        "description":"Style of widget (table, pivottable, graph, graph+table).",
                        "type":"string",
                        "enum":[  
                           "pivot"
                        ]
                     },
                     "height":{  
                        "description":"Height of the output element.",
                        "type":"integer",
                        "minimum":0,
                        "default":null
                     },
                     "pivottable":{  
                        "description":"Parameters used to customize pivottable (used to render input or output data).",
                        "type":"object",
                        "properties":{  
                           "rows":{  
                              "description":"Array of the names of columns in the data.frame to prepopulate the rows of the pivot table.",
                              "type":["array", "string"],
                              "minLength":1,
                              "uniqueItems":true,
                              "minItems":0,
                              "items":{  
                                 "type":"string",
                                 "minLength":1
                              },
                              "default":null
                           },
                           "cols":{  
                              "description":"Array of the names of columns in the data.frame to prepopulate the columns of the pivot table.",
                              "type":["array", "string"],
                              "minLength":1,
                              "uniqueItems":true,
                              "minItems":0,
                              "items":{  
                                 "type":"string",
                                 "minLength":1
                              },
                              "default":null
                           },
                           "aggregatorName":{  
                              "description":"Aggregator to use (see enum for list of possible aggregators)",
                              "type":"string",
                              "enum":[  
                                 "Count",
                                 "Count Unique Values",
                                 "List Unique Values",
                                 "Sum",
                                 "Integer Sum",
                                 "Average",
                                 "Median",
                                 "Sample Variance",
                                 "Sample Standard Deviation",
                                 "Minimum",
                                 "Maximum",
                                 "First",
                                 "Last",
                                 "Sum over Sum",
                                 "80% Upper Bound",
                                 "80% Lower Bound",
                                 "Sum as Fraction of Total",
                                 "Sum as Fraction of Total",
                                 "Sum as Fraction of Rows",
                                 "Sum as Fraction of Columns",
                                 "Count as Fraction of Total",
                                 "Count as Fraction of Rows",
                                 "Count as Fraction of Columns"
                              ],
                              "default":"Count"
                           },
                           "vals":{  
                              "description":"String name of the column in the data.frame to use with aggregatorName. Must be additive (i.e a number).",
                              "type":"string",
                              "minLength":1,
                              "default":null
                           },
                           "rendererName":{  
                              "description":"Name of the renderer selected, e.g. Table, Heatmap, Treemap etc",
                              "type":"string",
                              "enum":[  
                                 "Table",
                                 "Table Barchart",
                                 "Heatmap",
                                 "Row Heatmap",
                                 "Col Heatmap",
                                 "Treemap",
                                 "Horizontal Bar Chart",
                                 "Horizontal Stacked Bar Chart",
                                 "Bar Chart",
                                 "Stacked Bar Chart",
                                 "Line Chart",
                                 "Area Chart",
                                 "Scatter Chart"
                              ],
                              "default":"Table"
                           },
                           "locale":{  
                              "description":"Localization options",
                              "type":"string",
                              "enum":[  
                                 "cs",
                                 "da",
                                 "de",
                                 "en",
                                 "es",
                                 "fr",
                                 "it",
                                 "nl",
                                 "pl",
                                 "pt",
                                 "ru",
                                 "sq",
                                 "tr",
                                 "zh"
                              ],
                              "default":"en"
                           },
                           "subtotals":{  
                              "description":"Should the subtotals plugin be used?",
                              "type":"boolean",
                              "default":false
                           },
                           "width":{  
                              "description":"width of pivottable",
                              "type":"integer",
                              "minimum":1,
                              "default":null
                           },
                           "height":{  
                              "description":"height of pivottable",
                              "type":"integer",
                              "minimum":1,
                              "default":null
                           }
                        }
                     }
                  },
                  "additionalProperties":true,
                  "required":[  
                     "outType"
                  ]
               },
               {  
                  "properties":{  
                     "outType":{  
                        "description":"Style of widget (table, pivottable, graph, graph+table).",
                        "type":"string",
                        "enum":[  
                           "dtGraph",
                           "graph"
                        ]
                     },
                     "height":{  
                        "description":"Height of the output element.",
                        "type":"integer",
                        "minimum":0,
                        "default":null
                     },
                     "graph":{  
                        "type":"object",
                        "description":"Graph display options",
                        "properties":{  
                           "tool":{  
                              "type":"string",
                              "enum":[  
                                 "plotly",
                                 "dygraphs",
                                 "leaflet",
                                 "timevis"
                              ],
                              "required":true
                           }
                        },
                        "required":[  
                           "tool"
                        ]
                     }
                  },
                  "additionalProperties":false,
                  "required":[  
                     "outType",
                     "graph"
                  ]
               },
               {  
                  "properties":{  
                     "outType":{  
                        "description":"Custom style.",
                        "type":"string",
                        "minLength":2,
                        "not":{  
                           "enum":[  
                              "valueBox",
                              "graph",
                              "dtGraph",
                              "datatable",
                              "pivot"
                           ]
                        }
                     },
                     "height":{  
                        "description":"Height of the output element.",
                        "type":"integer",
                        "minimum":0,
                        "default":null,
                        "required":false
                     },
                     "packages":{  
                        "description":"Packages that need to be installed",
                        "type":["array", "string"],
                        "minLength":2,
                        "minItems":1,
                        "uniqueItems":true,
                        "items":{  
                           "type":"string",
                           "minLength":2
                        }
                     },
                     "options":{
                        "description":"Additional options",
                        "type":"object",
                        "required":false
                     }
                  },
                  "additionalProperties":false,
                  "required":[  
                     "outType"
                  ]
               }
            ]
         }
      },
      "roundingDecimals":{  
         "description":"Number of decimal places used for rounding output values.",
         "type":"integer",
         "minimum":0,
         "maximum":6,
         "default":2,
         "required":false
      },
      "handsontable":{  
         "description":"Parameters used to customize handsontables (spreadsheet like js-editor used to modify input data).",
         "type":"object",
         "required":false,
         "properties":{  
            "height":{  
               "description":"Height of handsontable.",
               "type":"integer",
               "exclusiveMinimum":0,
               "default":700,
               "required":false
            },
            "width":{  
               "description":"Width of handsontable.",
               "type":"integer",
               "exclusiveMinimum":0,
               "default":null,
               "required":false
            },
            "readonly":{  
               "description":"Defines whether handsontable can not be modified.",
               "type":[  
                  "boolean",
                  "null"
               ],
               "default":null,
               "required":false
            },
            "search":{  
               "description":"Defines whether handsontable can be accessed via search in browser.",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "highlightCol":{  
               "description":"Defines whether column of current active cell is highlighted.",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "highlightRow":{  
               "description":"Defines whether row of current active cell is highlighted.",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "rowHeaderWidth":{  
               "description":"Width of the row number/row header column.",
               "type":"integer",
               "exclusiveMinimum":0,
               "default":null,
               "required":false
            },
            "enableComments":{  
               "description":"Enable comments in table. Will be ignored when solving the model.",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "stretchH":{  
               "description":"Specifies whether table is stretched to full box width.",
               "type":"string",
               "enum":[  
                  "none",
                  "last",
                  "all"
               ],
               "default":"all",
               "required":false
            },
            "columnSorting":{  
               "description":"Defines whether columns can be sorted in ascending/descending order (by clicking on column name in header row).",
               "type":"boolean",
               "default":true,
               "required":false
            },
            "manualColumnMove":{  
               "description":"Defines whether columns can be manually moved (changed position).",
               "type":"boolean",
               "default":false,
               "required":false
            },
            "manualColumnResize":{  
               "description":"Defines whether columns can be manually resized.",
               "type":"boolean",
               "default":false,
               "required":false
            },
            "colWidths":{  
               "description":"Width of columns.",
               "type":[  
                  "string",
                  "integer"
               ],
               "exclusiveMinimum":0,
               "default":null,
               "required":false
            },
            "fixedColumnsLeft":{  
               "description":"Number of columns fixed on the left.",
               "type":"integer",
               "exclusiveMinimum":0,
               "default":null,
               "required":false
            },
            "contextMenu":{  
               "description":"Options for customizing the handsontable context menu (accessible via right mouse click)",
               "type":"object",
               "additionalProperties":false,
               "required":"false",
               "properties":{  
                  "enabled":{  
                     "description":"Defines whether context menu is activated (using right mouse click).",
                     "type":"boolean",
                     "default":true,
                     "required":false
                  },
                  "allowRowEdit":{  
                     "description":"logical enabling row editing",
                     "type":"boolean",
                     "default":true
                  },
                  "allowColEdit":{  
                     "description":"logical enabling column editing. Note that Handsontable does not support column add/remove when column types are defined (i.e. useTypes == TRUE in rhandsontable).",
                     "type":"boolean",
                     "default":true
                  },
                  "allowReadOnly":{  
                     "description":"logical enabling read-only toggle",
                     "type":"boolean",
                     "default":false
                  },
                  "allowComments":{  
                     "description":"Enable comments in table. Will be ignored when solving the model.",
                     "type":"boolean",
                     "default":true
                  }
               }
            }
         }
      },
      "pivottable":{  
         "description":"Parameters used to customize pivottable (used to render output data).",
         "type":"object",
         "additionalProperties":false,
         "properties":{  
            "bgColor":{  
               "description":"Background color (of row and column headers)",
               "type":"string",
               "required":false,
               "default":"#ffffff"
            }
         }
      },
      "datatable":{  
         "description":"Parameters used to customize datatable (used to render output data).",
         "type":"object",
         "additionalProperties":false,
         "properties":{  
            "class":{  
               "description":"css classes used for styling datatable",
               "type":[  
                  "array",
                  "string"
               ],
               "minItems":1,
               "default":"display",
               "required":false
            },
            "filter":{  
               "description":"Whether and where to include column filters",
               "type":"string",
               "enum":[  
                  "none",
                  "bottom",
                  "top"
               ],
               "default":"bottom",
               "required":false
            },
            "rownames":{  
               "description":"Boolean that specifies whether to show row names",
               "type":"boolean",
               "required":false,
               "default":false
            },
            "autoHideNavigation":{  
               "description":"Boolean that specifies whether to automatically hide navigation elements when number of total records is less than page size",
               "type":"boolean",
               "required":false,
               "default":true
            },
            "extensions":{  
               "description":"For a list of supported extensions see: https://rstudio.github.io/DT/extensions.html",
               "type":["array", "string"],
               "uniqueItems":true,
               "required":false,
               "items":{  
                  "type":"string",
                  "enum":[  
                     "AutoFill",
                     "Buttons",
                     "ColReorder",
                     "ColVis",
                     "FixedColumns",
                     "FixedHeader",
                     "KeyTable",
                     "Responsive",
                     "RowReorder",
                     "Scroller",
                     "Select"
                  ]
               }
            },
            "options":{  
               "description":"Additional options (e.g. column specific).",
               "type":"object",
               "required":false,
               "properties":{  
                  "dom":{  
                     "description":"Defines where the table control elements appear (position) and in what order",
                     "type":"string",
                     "minLength":1,
                     "required":false
                  },
                  "buttons":{  
                     "description":"Buttons or groups of buttons to insert",
                     "type":["array", "string"],
                     "uniqueItems":true,
                     "items":{
                         "type": "string",
                         "enum":["copy", "csv", "excel", "pdf", "print"]
                     },
                     "required":false
                  },
                  "pageLength":{  
                     "description":"Number of items to display per page",
                     "type":"integer",
                     "minimum":1,
                     "default":15,
                     "required":false
                  },
                  "columnDefs":{  
                     "description":"Column specific options.",
                     "type":"array",
                     "uniqueItems":true,
                     "items":{  
                        "type":"object",
                        "properties":{  
                           "targets":{  
                              "required":true,
                              "anyOf":[  
                                 {  
                                    "description":"Column numbers to refer to.",
                                    "type":["array", "integer"],
                                    "minimum":1,
                                    "minItems":1,
                                    "items":{  
                                       "type":"integer",
                                       "minimum":1
                                    }
                                 },
                                 {  
                                    "description":"Use _all_ to refer to all the columns",
                                    "type":"string",
                                    "minLength":1
                                 }
                              ]
                           },
                           "className":{  
                              "required":false,
                              "type":"string",
                              "minLength":1
                           },
                           "visible":{  
                              "required":false,
                              "type":"boolean"
                           },
                           "searchable":{  
                              "required":false,
                              "type":"boolean"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "inputGroups":{
         "description": "Specify input tables that shall be aggregated to groups",
         "type": "array",
         "required":false,
         "minItems":1,
         "items":{
           "type":"object",
           "additionalProperties":false,
           "required": ["name", "members"],
           "properties":{
              "name":{
                "description":"Specify the name of the group as it is displayed in the UI",
                "type":"string",
                "minLength":1
              },
              "members":{
                "description":"Specify the group members (input tables)",
                "type":["array", "string"],
                "uniqueItems":true,
                "minItems":2,
                "items":{
                  "type":"string",
                  "minLength":1
                }
              }
           }
         }
      },
      "outputGroups":{
         "description": "Specify output tables that shall be aggregated to groups",
         "type": "array",
         "required":false,
         "uniqueItems":true,
         "minItems":1,
         "items":{
           "type":"object",
           "additionalProperties":false,
           "required": ["name", "members"],
           "properties":{
              "name":{
                "description":"Specify the name of the group as it is displayed in the UI",
                "type":"string",
                "minLength":1
              },
              "members":{
                "description":"Specify the group members (output tables)",
                "type":["array", "string"],
                "uniqueItems":true,
                "items":{
                  "type":"string",
                  "minLength":1
                }
              }
           }
         }
      }
   }
}
