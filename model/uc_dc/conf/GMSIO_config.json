{
    "pageTitle": "Cost objective calculations for UC models",
    "gamsMetaDelim": "###",
    "gamsWEBUISwitch": "--WEBUI=1",
    "fileExchange": "csv",
    "csvDelim": ",",
    "gamsInputFiles": {
        "GMSPAR_casename": {
            "alias": "Input case",
            "dropdown": {
                "label": "Select input case [case]",
                "choices": "casename$filename"
            },
            "noBatch": true
        },
        "GMSPAR_times": {
            "alias": "Time range",
            "slider": {
                "label": "Select the time range to solve. Note: times > 1 only usable for RTS-96 cases with 24 hour demand data! [times]",
                "min": 1,
                "max": "max(casename$symName[noPeriods]$symVal)",
                "default": [
                    1,
                    "max(casename$symName[noPeriods]$symVal)"
                ],
                "step": 1
            }
        },
        "GMSPAR_genrun": {
            "alias": "Initial generator conditions",
            "dropdown": {
                "label": "Select the initial conditions of the generators",
                "choices": "$casename$symName[genRun]$symVal"
            }
        },
        "GMSPAR_allon": {
            "alias": "allon",
            "dropdown": {
                "label": "Turn on all gens and/or lines during solve [allon]",
                "aliases": [
                    "lines",
                    "none"
                ],
                "choices": [
                    "lines",
                    0
                ],
                "selected": "%allon%"
            }
        },
        "GMSPAR_obj": {
            "alias": "Obj",
            "dropdown": {
                "label": "Objective function [obj]",
                "aliases": [
                    "quadratic",
                    "piecewise linear"
                ],
                "choices": [
                    "quad",
                    "pwl"
                ],
                "selected": "pwl"
            }
        },
        "GMSPAR_linelimits": {
            "alias": "linelimits",
            "dropdown": {
                "label": "Type of line limit data to use [linelimits]",
                "choices": [
                    "given",
                    "uwcalc",
                    "inf"
                ],
                "selected": "given"
            }
        },
        "GMSPAR_genPmin": {
            "alias": "genPmin",
            "dropdown": {
                "label": "Data for Generator lower limit [genPmin]",
                "choices": [
                    "0",
                    "given",
                    "uwcalc"
                ],
                "selected": "given"
            }
        },
        "GMSPAR_ramprates": {
            "alias": "ramprates",
            "dropdown": {
                "label": "Type of ramprate data to use [ramprates]",
                "choices": [
                    "given",
                    "uwcalc"
                ],
                "selected": "given"
            }
        },
        "GMSPAR_relax": {
            "alias": "relax",
            "checkbox": {
                "label": "Relax integer models? [relax]",
                "value": 0,
                "class": "checkbox-material"
            }
        },
        "GMSPAR_lineloss": {
            "alias": "lineloss",
            "checkbox": {
                "label": "Approximate lineloss? [lineloss]",
                "value": 0,
                "class": "checkbox-material"
            }
        },
        "GMSPAR_wind": {
            "alias": "wind",
            "checkbox": {
                "label": "Turn off wind turbines? [wind]",
                "value": "max(casename$symName[wind]$symVal)",
                "disable": true,
                "class": "checkbox-material"
            }
        },
        "GMSOPT_mip": {
            "alias": "MIP-Solver",
            "dropdown": {
                "label": "Solver to use for MIP",
                "aliases": [
                    "BARON",
                    "BDMLP",
                    "CBC",
                    "CPLEX",
                    "GUROBI",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MOSEK",
                    "ODHCPLEX",
                    "SCIP",
                    "XA",
                    "XPRESS"
                ],
                "choices": [
                    "BARON",
                    "BDMLP",
                    "CBC",
                    "CPLEX",
                    "GUROBI",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MOSEK",
                    "ODHCPLEX",
                    "SCIP",
                    "XA",
                    "XPRESS"
                ],
                "selected": "CPLEX"
            }
        },
        "GMSOPT_miqcp": {
            "alias": "miqcp-Solver",
            "dropdown": {
                "label": "Solver to use for miqcp",
                "aliases": [
                    "ALPHAECP",
                    "ANTIGONE",
                    "BARON",
                    "BONMIN",
                    "COUENNE",
                    "CPLEX",
                    "DICOPT",
                    "GLOMIQO",
                    "GUROBI",
                    "KNITRO",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MOSEK",
                    "ODHCPLEX",
                    "OQNLP",
                    "SBB",
                    "SCIP",
                    "XPRESS"
                ],
                "choices": [
                    "ALPHAECP",
                    "ANTIGONE",
                    "BARON",
                    "BONMIN",
                    "COUENNE",
                    "CPLEX",
                    "DICOPT",
                    "GLOMIQO",
                    "GUROBI",
                    "KNITRO",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MOSEK",
                    "ODHCPLEX",
                    "OQNLP",
                    "SBB",
                    "SCIP",
                    "XPRESS"
                ],
                "selected": "CPLEX"
            }
        },
        "GMSOPT_rmip": {
            "alias": "rmip-Solver",
            "dropdown": {
                "label": "Solver to use for rmip",
                "aliases": [
                    "BARON",
                    "BDMLP",
                    "CBC",
                    "CONOPT 3",
                    "CONOPT 4",
                    "CPLEX",
                    "DECIS",
                    "GUROBI",
                    "IPOPT",
                    "KNITRO",
                    "LGO",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MINOS",
                    "MOSEK",
                    "SNOPT",
                    "SOPLEX",
                    "XA",
                    "XPRESS"
                ],
                "choices": [
                    "BARON",
                    "BDMLP",
                    "CBC",
                    "CONOPT3",
                    "CONOPT4",
                    "CPLEX",
                    "DECIS",
                    "GUROBI",
                    "IPOPT",
                    "KNITRO",
                    "LGO",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MINOS",
                    "MOSEK",
                    "SNOPT",
                    "SOPLEX",
                    "XA",
                    "XPRESS"
                ],
                "selected": "CPLEX"
            }
        },
        "GMSOPT_rmiqcp": {
            "alias": "rmiqcp-Solver",
            "dropdown": {
                "label": "Solver to use for rmiqcp",
                "aliases": [
                    "ANTIGONE",
                    "BARON",
                    "CONOPT 3",
                    "CONOPT 4",
                    "COUENNE",
                    "CPLEX",
                    "GLOMIQO",
                    "GUROBI",
                    "IPOPT",
                    "KNITRO",
                    "LGO",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MINOS",
                    "MOSEK",
                    "MSNLP",
                    "OQNLP",
                    "SCIP",
                    "SNOPT",
                    "XPRESS"
                ],
                "choices": [
                    "ANTIGONE",
                    "BARON",
                    "CONOPT3",
                    "CONOPT4",
                    "COUENNE",
                    "CPLEX",
                    "GLOMIQO",
                    "GUROBI",
                    "IPOPT",
                    "KNITRO",
                    "LGO",
                    "LINDO",
                    "LINDOGLOBAL",
                    "MINOS",
                    "MOSEK",
                    "MSNLP",
                    "OQNLP",
                    "SCIP",
                    "SNOPT",
                    "XPRESS"
                ],
                "selected": "CPLEX"
            }
        },
        "GMSPAR_savesol": {
            "alias": "savesol",
            "checkbox": {
                "label": "Save solution? [savesol]",
                "value": 0,
                "class": "checkbox-material"
            }
        },
        "GMSPAR_verbose": {
            "alias": "verbose",
            "checkbox": {
                "label": "Print input in listing output? [verbose]",
                "value": 1,
                "class": "checkbox-material"
            }
        }
    },
    "gamsOutputFiles": {
        "eprice": {
            "alias": "Electricity prices",
            "headers": {
                "Aliased with bus": {
                    "type": "set"
                },
                "Set of time periods (up to 24 for UC)": {
                    "type": "set"
                },
                "Electricity prices": {
                    "type": "parameter"
                }
            }
        },
        "businfo_report": {
            "alias": "businfo",
            "headers": {
                "Set of buses": {
                    "type": "set"
                },
                "Set of bus info data types": {
                    "type": "set"
                },
                "Set of bus info selectors": {
                    "type": "set"
                },
                "businfo": {
                    "type": "parameter"
                }
            }
        },
        "geninfo_report": {
            "alias": "geninfo",
            "headers": {
                "Set of generators": {
                    "type": "set"
                },
                "Set of generator info data types": {
                    "type": "set"
                },
                "Set of generator info selectors": {
                    "type": "set"
                },
                "geninfo": {
                    "type": "parameter"
                }
            }
        },
        "branchinfo_report": {
            "alias": "branchinfo",
            "headers": {
                "Set of buses": {
                    "type": "set"
                },
                "Set of buses1": {
                    "type": "set"
                },
                "Indices for multiple lines between buses": {
                    "type": "set"
                },
                "Set of branch info data types": {
                    "type": "set"
                },
                "Set of branch info selectors": {
                    "type": "set"
                },
                "branchinfo": {
                    "type": "parameter"
                }
            }
        },
        "fuelinfo_report": {
            "alias": "fuelinfo",
            "headers": {
                "Set of fuel types": {
                    "type": "set"
                },
                "Set of fuel info selectors": {
                    "type": "set"
                },
                "fuelinfo": {
                    "type": "parameter"
                }
            }
        },
        "scalars_out": {
            "alias": "Output Scalars",
            "symnames": [
                "total_cost_Report",
                "version_Report",
                "baseMVA_Report",
                "case_input",
                "obj_input",
                "LP_solver",
                "QCP_solver",
                "NLP_solver",
                "CNS_solver",
                "timeperiod_input",
                "allon_input",
                "linelimits_input",
                "genPmin_input",
                "lineloss_input",
                "qlim_input",
                "slim_input",
                "ic_input",
                "iter_input",
                "times_input",
                "ramprates_input",
                "relax_input",
                "demandbids_input",
                "wind_input",
                "savesol_input",
                "verbose_input"
            ],
            "symtext": [
                "Final objective value",
                "version",
                "baseMVA",
                "Selected Testcase",
                "Objective function",
                "LP-solver",
                "QCP-solver",
                "NLP-solver",
                "CNS-solver",
                "Selected time period to solve",
                "Turned on gens and/or lines during solve",
                "Type of line limit data to use",
                "Data for Generator lower limit",
                "Whether to approximate lineloss",
                "Whether to enforce reactive power limits as D-curve circle constraints",
                "Whether to use apparent power limits on line",
                "Choosen method for generating initial conditions, i.e. NLP starting point",
                "Number of iterations",
                "Time range",
                "Type of ramprate data to use",
                "Whether to relax integer models",
                "Whether to turn on elastic demand bidding",
                "Whether to turn off wind turbines",
                "Whether to save the solution as GDX",
                "Whether to print input in listing output"
            ],
            "symtypes": [
                "parameter",
                "parameter",
                "parameter",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set",
                "set"
            ],
            "count": 25,
            "headers": {
                "Scalar": {
                    "type": "set"
                },
                "Description": {
                    "type": "acronym"
                },
                "Value": {
                    "type": "acronym"
                }
            }
        }
    }
}