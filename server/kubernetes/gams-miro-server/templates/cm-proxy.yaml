{{- /*
Copyright GAMS Development Corp. All Rights Reserved.
SPDX-License-Identifier: GPL-3.0-only
*/}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-proxy-config
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
data:
  application.yml: |-
    proxy:
      title: {{ .Values.proxy.config.title | quote }}
      template-path: ./templates/2col
      favicon-path: ./favicon.ico
      model-dir: /home/miroproxy/mnt/models
      data-dir: /home/miroproxy/mnt/data
      miro-lang: {{ .Values.proxy.config.language }}
      port: 8080
      heartbeat-rate: 10000
      heartbeat-timeout: 120000
      same-site-cookie: Lax
      admin-groups: admins
      container-backend: kubernetes
      max-upload-size: {{ .Values.proxy.config.maxUploadSizeMB }}
      force-signed-apps: {{ .Values.proxy.config.forceSignedApps }}
      disable-readonly-mode: {{ .Values.proxy.config.disableReadonlyMode }}
      anonymous-readonly-mode: {{ .Values.proxy.config.anonymousReadonlyMode }}
      authentication: {{ .Values.proxy.config.authentication }}
      max-total-instances: {{ .Values.proxy.config.maxTotalInstances }}
      {{- if .Values.proxy.config.metrics.enabled }}
      usage-stats-url: micrometer
      {{- end }}
      webservice:
        authentication-url: http://{{ .Release.Name }}-auth:8081/login
      openid:
        auth-url: {{ .Values.proxy.config.openid.authUrl | quote }}
        token-url: {{ .Values.proxy.config.openid.tokenUrl | quote }}
        jwks-url: {{ .Values.proxy.config.openid.jwksUrl | quote }}
        logout-url: {{ .Values.proxy.config.openid.logoutUrl | quote }}
        client-id: {{ .Values.proxy.config.openid.clientId | quote }}
        client-secret: {{ .Values.proxy.config.openid.clientSecret | quote }}
      database:
        host: {{ .Release.Name }}-db
        port: 5432
        name: {{ .Values.db.name | quote }}
        username: {{ .Values.db.user | quote }}
      engine:
        host: {{ .Values.proxy.config.engine.apiUrl | quote }}
        ns: {{ .Values.proxy.config.engine.namespace | quote }}
        anonymous-user: {{ .Values.proxy.config.engine.anonymousUser | quote }}
      docker:
        container-network: ""
        miro-image-name: {{ include "common.images.image" (dict "imageRoot" (dict "registry" .Values.miro.image.registry "repository" .Values.miro.image.repository "tag" (coalesce .Values.miro.image.tag .Values.image.tag .Chart.AppVersion)) "global" .Values.global) }}
        admin-image-name: {{ include "common.images.image" (dict "imageRoot" (dict "registry" .Values.admin.image.registry "repository" .Values.admin.image.repository "tag" (coalesce .Values.admin.image.tag .Values.image.tag .Chart.AppVersion)) "global" .Values.global) }}
      kubernetes:
        internal-networking: true
        {{- if .Values.global.imagePullSecrets }}
        image-pull-secrets:
          {{- toYaml $.Values.global.imagePullSecrets | nindent 10 }}
        {{- end }}
        namespace: {{ .Release.Namespace | quote }}
        global-pod-patches: |
          - op: add
            path: /spec/volumes
            value:
              {{- if eq .Values.persistence.type "local" }}
                - name: shared-data
                  hostPath:
                    path: {{ .Values.persistence.local.path | quote }}
                    type: DirectoryOrCreate
              {{- else if eq .Values.persistence.type "efs" }}
                - name: shared-data
                  persistentVolumeClaim:
                    claimName: {{ .Release.Name }}-efs-pvc
              {{- end }}
          - op: add
            path: /spec/containers/0/volumeMounts
            value:
              - mountPath: /home/miro/mnt
                name: shared-data
          - op: add
            path: /spec/containers/0/resources
            value:
              {{- include "common.tplvalues.render" (dict "value" .Values.miro.resources "context" $) | nindent 14 }}
          - op: add
            path: /spec/priorityClassName
            value: {{ .Release.Name }}-app-priority
          - op: add
            path: /metadata/annotations
            value: { "cluster-autoscaler.kubernetes.io/safe-to-evict": "false" }
          - op: add
            path: /metadata/labels
            value: { "miro.gams.com/app-name": "{{ .Release.Name }}-ui" }
          {{- if .Values.global.nodeSelector }}
          - op: add
            path: /spec/nodeSelector
            value:
              {{- include "common.tplvalues.render" (dict "value" .Values.global.nodeSelector "context" $) | nindent 14 }}
          {{- end }}
          {{- if .Values.global.tolerations }}
          - op: add
            path: /spec/tolerations
            value:
              {{- include "common.tplvalues.render" (dict "value" .Values.global.tolerations "context" $) | nindent 14 }}
          {{- end }}
        global-pod-patches-admin: |
          - op: add
            path: /spec/volumes
            value:
              {{- if eq .Values.persistence.type "local" }}
                - name: shared-data
                  hostPath:
                    path: {{ .Values.persistence.local.path | quote }}
                    type: DirectoryOrCreate
              {{- else if eq .Values.persistence.type "efs" }}
                - name: shared-data
                  persistentVolumeClaim:
                    claimName: {{ .Release.Name }}-efs-pvc
              {{- end }}
          - op: add
            path: /spec/containers/0/volumeMounts
            value:
              - mountPath: /home/miro/admin/mnt
                name: shared-data
          - op: add
            path: /spec/containers/0/resources
            value:
              {{- include "common.tplvalues.render" (dict "value" .Values.admin.resources "context" $) | nindent 14 }}
          - op: add
            path: /spec/priorityClassName
            value: {{ .Release.Name }}-app-priority
          - op: add
            path: /metadata/annotations
            value: { "cluster-autoscaler.kubernetes.io/safe-to-evict": "false" }
          - op: add
            path: /metadata/labels
            value: { "miro.gams.com/app-name": "{{ .Release.Name }}-admin" }
          {{- if .Values.global.nodeSelector }}
          - op: add
            path: /spec/nodeSelector
            value:
              {{- include "common.tplvalues.render" (dict "value" .Values.global.nodeSelector "context" $) | nindent 14 }}
          {{- end }}
          {{- if .Values.global.tolerations }}
          - op: add
            path: /spec/tolerations
            value:
              {{- include "common.tplvalues.render" (dict "value" .Values.global.tolerations "context" $) | nindent 14 }}
          {{- end }}

    spring:
      application.name: {{ .Values.proxy.config.title | quote }}

    server:
      frame-options: sameorigin
      secure-cookies: false
      forward-headers-strategy: native
      servlet:
        session.timeout: 21600
        context-path: {{ .Values.global.rootPath | quote }}

    {{- if .Values.proxy.config.metrics.enabled }}
    management:
      prometheus:
        metrics:
          export:
            enabled: true
    {{- end }}
