# Copyright GAMS Development Corp. All Rights Reserved.
# SPDX-License-Identifier: GPL-3.0-only

global:
  rootPath: '/'
  # Global Docker image registry
  imageRegistry: ''
  # imagePullSecrets:
  #   - registryKeySecretName
  imagePullSecrets: []
  # nodeSelector: Node labels for pod assignment
  nodeSelector: {}
  # tolerations: tolerations for pod assignment
  tolerations: []
  # nodeSelector: Node labels for pod assignment of stateful sets (database)
  nodeSelectorSts: {}
  # tolerationsSts: tolerations for pod assignment of stateful sets (database)
  tolerationsSts: []
image:
  # Global tag of the images. If not specified, AppVersion is used.
  tag: ''

proxy:
  image:
    registry: docker.io/gams
    repository: miro-proxy
    tag: ''
  resources:
    requests:
      cpu: '100m'
      memory: 250Mi
    limits:
      cpu: '1000m'
      memory: 500Mi
  service:
    type: ClusterIP # ClusterIP or NodePort
    # only relevant if type is NodePort. If not provided, a random port within the NodePort range is used.
    nodePort: ''
  config:
    title: GAMS MIRO Server
    language: en # en, de or cn
    maxTotalInstances: -1 # -1 for unlimited
    maxUploadSizeMB: 200
    forceSignedApps: false
    disableReadonlyMode: false
    anonymousReadonlyMode: false
    authentication: webservice # webservice or openid
    openid:
      authUrl: ''
      tokenUrl: ''
      jwksUrl: ''
      logoutUrl: ''
      clientId: ''
      clientSecret: ''
    engine:
      apiUrl: ''
      namespace: ''
      anonymousUser: ''
      anonymousPassword: ''
    metrics:
      enabled: false
      port: 9090

auth:
  image:
    registry: docker.io/gams
    repository: miro-auth
    tag: ''
  resources:
    requests:
      cpu: '100m'
      memory: 250Mi
    limits:
      cpu: '400m'
      memory: 500Mi
  service:
    type: ClusterIP # ClusterIP or NodePort
    # only relevant if type is NodePort. If not provided, a random port within the NodePort range is used.
    nodePort: ''

miro:
  image:
    registry: docker.io/gams
    repository: miro-ui
    tag: ''

admin:
  image:
    registry: docker.io/gams
    repository: miro-admin
    tag: ''

db:
  image:
    registry: docker.io
    repository: postgres
    tag: '17-alpine'
  user: 'GMSMASTER'
  password: ''
  name: 'gamsmiro'
  volumeSize: 5Gi
  resources:
    requests:
      cpu: '100m'
      memory: 1024Mi
    limits:
      cpu: '400m'
      memory: 3072Mi

persistence:
  type: 'local'
  efs:
    fileSystemId: 'fs-12345678' # The EFS File System ID
    accessPoint: '' # Optional, for EFS Access Points
    storageClass: 'efs-sc' # EFS storage class
  local:
    path: '/mnt/localstorage'

securityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001


## @param commonLabels Labels to add to all deployed resources
##
commonLabels: {}

ingress:
  enabled: false
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hostname: miroserver.local
  tls: false
  tlsSecretName: ''
  hostname: example.com
