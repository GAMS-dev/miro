pipeline {
    agent none

    options {
        buildDiscarder(logRotator(numToKeepStr: '2', daysToKeepStr: '1'))
        disableConcurrentBuilds()
    }

    stages {
        stage('Pack') {
            parallel {
                stage('linux'){
                    agent { label 'master' }
                        steps {
                            step([$class: 'WsCleanup'])
                            checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                            sh '''
                                echo "Do the linux packaging stuff here."
                            '''
                        }
                }
                stage ('windowsX64') {
                    agent { label 'windowsX64' }
                    steps {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        
                        withCredentials([usernamePassword(credentialsId: '7d79afcd-90b2-42b6-8327-e2f92dcc4adf', passwordVariable: 'password', usernameVariable: 'username')]) {
                          fileOperations([fileDownloadOperation(password: password, targetFileName: 'GMSR.zip', targetLocation: 'installer/win', url: 'https://cloud.gams.com/remote.php/webdav/Share/Freddy/libraries/GMSR_win.zip', userName: username)])
                          fileOperations([fileDownloadOperation(password: password, targetFileName: 'GMSCMEX_win.zip', targetLocation: 'installer/win', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/cmex_win.zip', userName: username)])
                        }
                        fileOperations([fileDownloadOperation(password: '', targetFileName: 'windows_x64_64.exe', targetLocation: 'installer/win', url: 'https://d37drm4t2jghv5.cloudfront.net/distributions/27.2.0/windows/windows_x64_64.exe', userName: '')])
                        copyArtifacts filter: '*x86_64.zip', fingerprintArtifacts: true, projectName: 'gams-studio/miro', selector: lastSuccessful()
                        bat '''
                            for /f "tokens=*" %%i in ('findstr /B /C:"MIROVersion <-" app.R') do set MIRO_VERSION=%%i
                            set MIRO_VERSION=%MIRO_VERSION:MIROVersion <- =%
                            set GAMS_DIR=%WORKSPACE%\\installer\\win\\innofiles
                            set GBIN_DIR=%GAMS_DIR%\\gbin
                            %GBIN_DIR%\\rm -rf output\\*
                            for /F "tokens=1,2,3 delims=." %%a in (%MIRO_VERSION%) do (
                               set MIRO_MAJOR=%%a
                               set MIRO_MINOR=%%b
                               set MIRO_REV=%%c
                            )
                            set MIRO_DIR=miro%MIRO_MAJOR%%MIRO_MINOR%
                            
                            cd installer\\win
                            mkdir innofiles
                            windows_x64_64.exe /sp- /silent /dir=%WORKSPACE%\\installer\\win\\innofiles /MERGETASKS='!desktopicon'
                            rem Cleanup installation
                            cd %GAMS_DIR%
                            %GBIN_DIR%\\rm -f .uninstinfo.ini unins000.dat unins000.exe gamside.url

                            rem R installation
                            %GBIN_DIR%\\cp %WORKSPACE%\\installer\\win\\GMSR.zip %WORKSPACE%\\installer\\win\\innofiles
                            gmsunzip -qq -o GMSR.zip
                            %GBIN_DIR%\\rm -f GMSR.zip

                            rem Python modules
                            cd %GAMS_DIR%\\GMSPython\\Scripts
                            pip install matplotlib pandas numpy xlsxwriter pandas_datareader geocoder geopy
                            cd %WORKSPACE%\\installer\\win\\innofiles

                            rem miro libinclude
                            copy /Y %WORKSPACE%\\model\\miro.gms inclib

                            mkdir miro
                            %GBIN_DIR%\\rm -rf miro\\*
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\JS miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\R miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\UI miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\conf miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\modules miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\resources miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\tools miro
                            %GBIN_DIR%\\cp -r %WORKSPACE%\\www miro
                            %GBIN_DIR%\\cp    %WORKSPACE%\\LICENSE miro
                            %GBIN_DIR%\\cp    %WORKSPACE%\\app.R miro
                            %GBIN_DIR%\\cp    %WORKSPACE%\\global.R miro
                            
                            cd %WORKSPACE%\\installer\\win
                            mkdir miro_lang
                            cd miro_lang
                            mkdir de
                            mkdir en
                            mkdir cn
                            %GBIN_DIR%\\rm -f %WORKSPACE%\\installer\\win\\innofiles\\miro\\conf\\config_schema.json
                            %GBIN_DIR%\\cp %WORKSPACE%\\conf\\config_schema.json en\\config_schema.json
                            echo 1,/"default":"en"/ s/"default":"en"/"default":"de"/ > x.sed
                            %GBIN_DIR%\\sed -f x.sed en\\config_schema.json > de\\config_schema.json
                            echo 1,/"default":"en"/ s/"default":"en"/"default":"cn"/ > x.sed
                            %GBIN_DIR%\\sed -f x.sed en\\config_schema.json > cn\\config_schema.json
                            cd %GAMS_DIR%

                            rem APILIB Example models
                            cd %WORKSPACE%\\model\\kport
                            %GAMS_DIR%\\gmszip -r kport_conf.zip conf\\kport.json static customRenderer
                            %GBIN_DIR%\\cp kport_conf.zip kport.gms %GAMS_DIR%\\datalib_ml
                            %GBIN_DIR%\\rm -f kport_conf.zip

                            cd %WORKSPACE%\\model\\pickstock
                            %GAMS_DIR%\\gmszip -r pickstock_conf.zip conf\\pickstock.json static customRenderer
                            %GBIN_DIR%\\cp pickstock_conf.zip pickstock.gms dowjones2016.csv %GAMS_DIR%\\datalib_ml
                            %GBIN_DIR%\\rm -f pickstock_conf.zip

                            cd %WORKSPACE%\\model\\pickstock_live
                            %GAMS_DIR%\\gmszip -r pickstock_live_conf.zip conf\\pickstock_live.json static customRenderer
                            %GBIN_DIR%\\cp pickstock_live_conf.zip pickstock_live.gms %GAMS_DIR%\\datalib_ml
                            %GBIN_DIR%\\rm -f pickstock_live_conf.zip

                            cd %WORKSPACE%\\model\\transport
                            %GAMS_DIR%\\gmszip -r transport_conf.zip conf\\transport.json static customRenderer
                            %GBIN_DIR%\\cp transport_conf.zip transport.gms %GAMS_DIR%\\datalib_ml
                            %GBIN_DIR%\\rm -f transport_conf.zip

                            cd %WORKSPACE%\\model\\transport_live
                            %GAMS_DIR%\\gmszip -r transport_live_conf.zip conf\\transport_live.json static customRenderer
                            %GBIN_DIR%\\cp transport_live_conf.zip transport_live.gms %GAMS_DIR%\\datalib_ml
                            %GBIN_DIR%\\rm -f transport_live_conf.zip

                            cd %WORKSPACE%
                            %GBIN_DIR%\\cp -f mkconfig.inc datalib.glb %GAMS_DIR%\\datalib_ml

                            cd %GAMS_DIR%\\datalib_ml
                            echo $include mkconfig.inc >> kport.gms
                            echo $include mkconfig.inc >> pickstock.gms
                            echo $include mkconfig.inc >> pickstock_live.gms
                            echo $include mkconfig.inc >> transport.gms
                            echo $include mkconfig.inc >> transport_live.gms

                            rem Newer cmex
                            cd %WORKSPACE%\\installer\\win
                            %GBIN_DIR%\\cp GMSCMEX_win.zip %GAMS_DIR%
                            cd %GAMS_DIR%
                            gmsunzip -o -qq GMSCMEX_win.zip
                            %GBIN_DIR%\\rm -f GMSCMEX_win.zip
                            
                            rem Adjust studio
                            cd %WORKSPACE%
                            ren *x86_64.zip studio.zip
                            cd %GAMS_DIR%
                            %GBIN_DIR%\\rm -rf studio\\*
                            %GAMS_DIR%\\gmsunzip -o %WORKSPACE%\\studio.zip

                            cd %WORKSPACE%\\installer\\win
                            mkdir output
                            
                            iscc "%WORKSPACE%\\installer\\win\\miro.iss" /DMIROVersion=%MIRO_VERSION% /DMyDirVersion=%MIRO_DIR%
                        '''
                    }
                }
                stage ('macos') {
                    agent { label 'macos' }
                    steps {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        withCredentials([usernamePassword(credentialsId: '7d79afcd-90b2-42b6-8327-e2f92dcc4adf', passwordVariable: 'password', usernameVariable: 'username')]) {
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'cmex_deg.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/cmex_deg.zip', userName: username)])
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'mac-lib.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/mac-lib.zip', userName: username)])
                        unzip dir: '', glob: '', zipFile: 'cmex_deg.zip'
                        unzip dir: 'library', glob: '', zipFile: 'mac-lib.zip'
                        }
                        fileOperations([fileDownloadOperation(password: '', targetFileName: 'GAMS27.2.0.dmg', targetLocation: '', url: 'https://d37drm4t2jghv5.cloudfront.net/distributions/27.2.0/macosx/GAMS27.2.0.dmg', userName: '')])
                        copyArtifacts filter: '*x86_64.dmg', fingerprintArtifacts: true, projectName: 'gams-studio/miro', selector: lastSuccessful()
                        sh '''
                            MIRO_VERSION=$(grep -m 1 -e "^MIROVersion" app.R | cut -f3 -d" " | xargs)
                            MIRO_VER_SHORT=$(echo $MIRO_VERSION  | sed -E s/\\([[:digit:]]+\\\\.[[:digit:]]+\\).*/\\\\1/)
                            DMG_NAME=$(find GAMS*.dmg)
                            DMG_NAME_TMP="GAMS_MIRO_TMP.dmg"
                            GMS_VER=$(echo $DMG_NAME | sed -E s/GAMS\\([[:digit:]]+\\\\.[[:digit:]]\\)\\\\.[[:digit:]]\\\\.dmg/\\\\1/)
                            GMS_VER_LONG=$(echo $DMG_NAME | sed -E s/GAMS\\([[:digit:]]+\\\\.[[:digit:]]\\\\.[[:digit:]]\\)\\\\.dmg/\\\\1/)
                            DMG_NAME_FINAL="GAMS_MIRO-${MIRO_VER_SHORT}.dmg"
                            
                            DMG_ROOT=volume
                            mkdir $DMG_ROOT
                            hdiutil convert $DMG_NAME -format UDRW -o $DMG_NAME_TMP
                            mount
                            hdiutil attach -mountpoint ./$DMG_ROOT $DMG_NAME_TMP
                            
                            STUDIO_ROOT=studio
                            mkdir $STUDIO_ROOT
                            mv *x86_64.dmg studio.dmg
                            hdiutil attach -mountpoint ./$STUDIO_ROOT studio.dmg
                            rm -fr $WORKSPACE/$DMG_ROOT/GAMS$GMS_VER/GAMS\\ Studio.app
                            cp -R studio/* $WORKSPACE/$DMG_ROOT/GAMS$GMS_VER
                            
                            TARGET="$WORKSPACE/$DMG_ROOT/GAMS$GMS_VER/sysdir"
                            
                            cd "$TARGET/GMSPython/bin"
                            "./pip" install matplotlib pandas numpy xlsxwriter pandas_datareader geocoder geopy Pillow
                            cd "$WORKSPACE"
                            mkdir -p "$TARGET/GMSR"
                            mkdir "$TARGET/miro/"
                            mv library "$TARGET/GMSR"
                            cp -r app.R conf global.R JS LICENSE modules R resources UI www tools "$TARGET/miro"
                            cp "$WORKSPACE/model/miro.gms" "$TARGET/inclib"
                            
                            cd "$WORKSPACE/model/kport"
                            "$TARGET/gmszip" -r kport_conf.zip conf/kport.json static customRenderer
                            cp kport_conf.zip kport.gms "$TARGET/datalib_ml"
                            rm -f kport_conf.zip
                            
                            cd "$WORKSPACE/model/pickstock"
                            "$TARGET/gmszip" -r pickstock_conf.zip conf/pickstock.json static customRenderer
                            cp pickstock_conf.zip pickstock.gms dowjones2016.csv "$TARGET/datalib_ml"
                            rm -f pickstock_conf.zip
                            
                            cd "$WORKSPACE/model/pickstock_live"
                            "$TARGET/gmszip" -r pickstock_live_conf.zip conf/pickstock_live.json static customRenderer
                            cp pickstock_live_conf.zip pickstock_live.gms "$TARGET/datalib_ml"
                            rm -f pickstock_live_conf.zip
                            
                            cd "$WORKSPACE/model/transport"
                            "$TARGET/gmszip" -r transport_conf.zip conf/transport.json static customRenderer
                            cp transport_conf.zip transport.gms "$TARGET/datalib_ml"
                            rm -f transport_conf.zip
                            
                            cd "$WORKSPACE/model/transport_live"
                            "$TARGET/gmszip" -r transport_live_conf.zip conf/transport_live.json static customRenderer
                            cp transport_live_conf.zip transport_live.gms "$TARGET/datalib_ml"
                            rm -f transport_live_conf.zip
                            
                            cd "$TARGET/datalib_ml"
                            echo \\$include mkconfig.inc >> kport.gms
                            echo \\$include mkconfig.inc >> pickstock.gms
                            echo \\$include mkconfig.inc >> pickstock_live.gms
                            echo \\$include mkconfig.inc >> transport.gms
                            echo \\$include mkconfig.inc >> transport_live.gms
                            
                            cp -f "$WORKSPACE/mkconfig.inc" "$WORKSPACE/datalib.glb" "$TARGET/datalib_ml"
                            mv "$WORKSPACE/cmex_deg.zip" "$TARGET/cmex_deg.zip"
                            cd "$TARGET"
                            unzip -o "$TARGET/cmex_deg.zip"
                            rm "$TARGET/cmex_deg.zip"
                            mv "$WORKSPACE/$DMG_ROOT/GAMS$GMS_VER/" "$WORKSPACE/$DMG_ROOT/MIRO$MIRO_VER_SHORT/"
                            
                            mv "$WORKSPACE/resources/macos/gmslogo.icns" "$WORKSPACE/$DMG_ROOT/.VolumeIcon.icns"
                            SetFile -a C "$WORKSPACE/$DMG_ROOT"
                            
                            diskutil rename "$WORKSPACE/$DMG_ROOT" "GAMS MIRO $MIRO_VER_SHORT"
                            
                            cd "$WORKSPACE"
                            hdiutil detach -verbose $STUDIO_ROOT
                            hdiutil detach -verbose $DMG_ROOT
                            hdiutil convert $DMG_NAME_TMP -format UDBZ -o $DMG_NAME_FINAL
                            rm studio.dmg
                            rm $DMG_NAME
                        '''
                    }
                }
            }
        }
        stage('Sign') {
            parallel {
                stage ('windowsX64') {
                    agent { label 'windowsX64' }
                    steps {
                        withCredentials([certificate(aliasVariable: '', credentialsId: '302df092-b329-47b9-8f7a-605da075126d', keystoreVariable: 'WIN_CERT_FILE', passwordVariable: 'WIN_CERT_PASSWD')]) {
                            bat '''
                                for /f "tokens=*" %%i in ('findstr /B /C:"MIROVersion <-" app.R') do set MIRO_VERSION=%%i
                                set MIRO_VERSION=%MIRO_VERSION:MIROVersion <- =%
                                echo Setting up environment for VS2017 usage...
                                cd "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
                                call vcvars64.bat
                                cd %WORKSPACE%\\installer\\win\\output
                                signtool sign /v /f %WIN_CERT_FILE% /p %WIN_CERT_PASSWD% /tr http://timestamp.comodoca.com/rfc3161 GAMS_MIRO-%MIRO_VERSION%.exe
                            '''
                        }
                        archiveArtifacts artifacts: '**/GAMS_MIRO-*.exe', fingerprint: true
                    }
                }
                stage ('macos') {
                    agent { label 'macos' }
                    steps {
                        withCredentials([string(credentialsId: '2e590f95-5e30-4101-93be-31a1b7402da4', variable: 'MACOS_KEYCHAIN_PASSWD')]) {
                              sh '''
                                  MIRO_VERSION=$(grep -m 1 -e "^MIROVersion" app.R | cut -f3 -d" " | xargs)
                                  MIRO_VER_SHORT=$(echo $MIRO_VERSION  | sed -E s/\\([[:digit:]]+\\\\.[[:digit:]]+\\).*/\\\\1/)
                                  DMG_NAME_FINAL="GAMS_MIRO-${MIRO_VER_SHORT}.dmg"
                                  
                                  security unlock-keychain -p ${MACOS_KEYCHAIN_PASSWD}
                                  codesign -s DP4M4YHKF2 $DMG_NAME_FINAL --force --verbose
                                  security lock-keychain
                                  codesign --verify --verbose "$DMG_NAME_FINAL"
                              '''
                          }
                        archiveArtifacts artifacts: '**/GAMS_MIRO-*.dmg', fingerprint: true
                }
              }
            }
        }       
    }
}
