pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '2', daysToKeepStr: '1'))
        disableConcurrentBuilds()
    }

    stages {
        stage('Pack') {
            steps {
                parallel linux: {
                    node('master') {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        sh '''
                            echo "Do the linux packaging stuff here."
                        '''
                    }
                },
                windowsX64: {
                    node('windowsX64') {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        withCredentials([usernamePassword(credentialsId: '87aa5869-00f2-4cce-88af-dafe0e29e813', passwordVariable: 'password', usernameVariable: 'username')]) {
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'win-lib.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Share/Freddy/libraries/win-lib.zip', userName: username)])
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'R-3.5.1-win.exe', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Share/Freddy/libraries/R-3.5.1-win.exe', userName: username)])
                        }
                        unzip dir: 'library', glob: '', zipFile: 'win-lib.zip'
                        withCredentials([certificate(aliasVariable: '', credentialsId: '302df092-b329-47b9-8f7a-605da075126d', keystoreVariable: 'WIN_CERT_FILE', passwordVariable: 'WIN_CERT_PASSWD')]) {
                            bat '''
                                for /f "tokens=*" %%i in ('findstr /B /C:"webuiVersion <-" app.R') do set WEBUI_VERSION=%%i
                                set WEBUI_VERSION=%WEBUI_VERSION:webuiVersion <- =%
                                iscc "installer\\win\\setup_win.iss" /DWebUIVersion=%WEBUI_VERSION%
                                echo Setting up environment for VS2017 usage...
                                cd "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
                                call vcvars64.bat
                                cd %WORKSPACE%\\installer\\win\\Output
                                signtool sign /v /f %WIN_CERT_FILE% /p %WIN_CERT_PASSWD% /tr http://timestamp.comodoca.com/rfc3161 GAMS_WebUI-%WEBUI_VERSION%.exe
                            '''
                        }
                        archiveArtifacts artifacts: '**/GAMS_WebUI-*.exe', fingerprint: true
                    }
                },
                macos: {
                    node('macos') {
                        step([$class: 'WsCleanup'])
                        sh '''
                            git clone --single-branch --branch $BRANCH_NAME git@git.gams.com:fproske/gmswebui.git
                            #git lfs pull
                        '''
                        //checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        withCredentials([usernamePassword(credentialsId: '87aa5869-00f2-4cce-88af-dafe0e29e813', passwordVariable: 'password', usernameVariable: 'username')]) {
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'mac-lib.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Share/Freddy/libraries/mac-lib.zip', userName: username)])
                        }
                        unzip dir: 'library', glob: '', zipFile: 'mac-lib.zip'
                        sh '''
                            WEBUI_VERSION=$(grep -e "^webuiVersion" app.R | cut -f3 -d" " | xargs)
                            DMG_NAME="GAMS_WebUI-${WEBUI_VERSION}_tmp.dmg"
                            DMG_NAME_FINAL="GAMS_WebUI-${WEBUI_VERSION}.dmg"
                            
                            cd installer/macOS
                            gzip -d GAMSWebUI.dmg.gz #&& mv GAMSWebUI.dmg $DMG_NAME
                            hdiutil convert -verbose -format UDRW -o $DMG_NAME GAMSWebUI.dmg
                            cd ../..

                            DMG_ROOT=volume
                            mkdir $DMG_ROOT
                            hdiutil attach -mountpoint ./$DMG_ROOT installer/macOS/$DMG_NAME

                            TARGET=$DMG_ROOT/GAMS25.1/sysdir

                            mkdir $TARGET/GMSWebUI
                            mkdir $TARGET/inclib
        
                            cp -r app.R conf library global.R JS LICENSE modules R resources UI www $TARGET/GMSWebUI
                            cp model/loadCSV.gms model/webui.gms $TARGET/inclib

                            hdiutil detach $DMG_ROOT

                            cd installer/macOS

                            hdiutil convert $DMG_NAME -format UDRO -o $DMG_NAME_FINAL
                            rm $DMG_NAME
                        '''
                        archiveArtifacts artifacts: '**/GAMS_WebUI-*.dmg', fingerprint: true
                    }
                }
            }
        }
    }
}
