pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '2', daysToKeepStr: '1'))
        disableConcurrentBuilds()
    }

    stages {
        stage('Pack') {
            steps {
                parallel linux: {
                    node('master') {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        sh '''
                            echo "Do the linux packaging stuff here."
                        '''
                    }
                },
                windowsX64: {
                    node('windowsX64') {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        withCredentials([usernamePassword(credentialsId: '7d79afcd-90b2-42b6-8327-e2f92dcc4adf', passwordVariable: 'password', usernameVariable: 'username')]) {
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'win-lib.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/win-lib.zip', userName: username)])
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'R-3.5.1-win.exe', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/R-3.5.1-win.exe', userName: username)])
                        }
                        unzip dir: 'library', glob: '', zipFile: 'win-lib.zip'
                        withCredentials([certificate(aliasVariable: '', credentialsId: '302df092-b329-47b9-8f7a-605da075126d', keystoreVariable: 'WIN_CERT_FILE', passwordVariable: 'WIN_CERT_PASSWD')]) {
                            bat '''
                                for /f "tokens=*" %%i in ('findstr /B /C:"MIROVersion <-" app.R') do set MIRO_VERSION=%%i
                                set MIRO_VERSION=%MIRO_VERSION:MIROVersion <- =%
                                iscc "installer\\win\\setup_win.iss" /DMIROVersion=%MIRO_VERSION%
                                echo Setting up environment for VS2017 usage...
                                cd "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
                                call vcvars64.bat
                                cd %WORKSPACE%\\installer\\win\\Output
                                signtool sign /v /f %WIN_CERT_FILE% /p %WIN_CERT_PASSWD% /tr http://timestamp.comodoca.com/rfc3161 GAMS_MIRO-%MIRO_VERSION%.exe
                            '''
                        }
                        archiveArtifacts artifacts: '**/GAMS_MIRO-*.exe', fingerprint: true
                    }
                },
                macos: {
                    node('macos') {
                        step([$class: 'WsCleanup'])
                        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'GitLFSPull']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd60edbb5-9329-4eba-81b2-448d800c4002', url: 'git@git.gams.com:fproske/gmswebui.git']]])
                        withCredentials([usernamePassword(credentialsId: '7d79afcd-90b2-42b6-8327-e2f92dcc4adf', passwordVariable: 'password', usernameVariable: 'username')]) {
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'GAMS26.1.0.dmg', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/GAMS26.1.0.dmg', userName: username)])
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'cmex_deg.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/cmex_deg.zip', userName: username)])
                        fileOperations([fileDownloadOperation(password: password, targetFileName: 'mac-lib.zip', targetLocation: '', url: 'https://cloud.gams.com/remote.php/webdav/Freddy/libraries/mac-lib.zip', userName: username)])
                        sh '''
                        ls -al
                        '''
                        unzip dir: '', glob: '', zipFile: 'cmex_deg.zip'
                        unzip dir: 'library', glob: '', zipFile: 'mac-lib.zip'
                        }
                        sh '''
                            MIRO_VERSION=$(grep -m 1 -e "^MIROVersion" app.R | cut -f3 -d" " | xargs)
                            DMG_NAME=$(find GAMS26*.dmg)
                            GMS_VER=$(echo $DMG_NAME | sed -E s/GAMS\\([[:digit:]]+\\\\.[[:digit:]]\\)\\\\.[[:digit:]]\\\\.dmg/\\\\1/)
                            GMS_VER_LONG=$(echo $DMG_NAME | sed -E s/GAMS\\([[:digit:]]+\\\\.[[:digit:]]\\\\.[[:digit:]]\\)\\\\.dmg/\\\\1/)
                            DMG_NAME_FINAL="GAMS_MIRO-${MIRO_VERSION}.dmg"
                            
                            DMG_ROOT=volume
                            mkdir $DMG_ROOT
                            mount
                            hdiutil attach -mountpoint ./$DMG_ROOT $DMG_NAME
                            
                            echo $WORKSPACE
                            
                            TARGET=$WORKSPACE/$DMG_ROOT/GAMS\\ $GMS_VER_LONG/GAMS$GMS_VER/sysdir
                            
                            $TARGET/GMSPython/bin/pip install matplotlib pandas numpy xlsxwriter pandas_datareader geocoder geopy Pillow
                            mkdir $TARGET/miro
                            
                            cp -r app.R conf library global.R JS LICENSE modules R resources UI www tools $TARGET/miro
                            cp model/miro.gms $TARGET/inclib
                            
                            cd $WORKSPACE/model/kport
                            $TARGET/gmszip -r kport_conf.zip conf/kport.json static customRenderer
                            cp kport_conf.zip kport.gms $TARGET/datalib_ml
                            rm -f kport_conf.zip
                            
                            cd $WORKSPACE/model/pickstock
                            $TARGET/gmszip -r pickstock_conf.zip conf/pickstock.json static customRenderer
                            cp pickstock_conf.zip pickstock.gms dowjones2016.csv $TARGET/datalib_ml
                            rm -f pickstock_conf.zip
                            
                            cd $WORKSPACE/model/pickstock_live
                            $TARGET/gmszip -r pickstock_live_conf.zip conf/pickstock_live.json static customRenderer
                            cp pickstock_live_conf.zip pickstock_live.gms $TARGET/datalib_ml
                            rm -f pickstock_live_conf.zip
                            
                            cd $WORKSPACE/model/transport
                            $TARGET/gmszip -r transport_conf.zip conf/transport.json static customRenderer
                            cp transport_conf.zip transport.gms $TARGET/datalib_ml
                            rm -f transport_conf.zip
                            
                            cd $WORKSPACE/model/transport_live
                            $TARGET/gmszip -r transport_live_conf.zip conf/transport_live.json static customRenderer
                            cp transport_live_conf.zip transport_live.gms $TARGET/datalib_ml
                            rm -f transport_live_conf.zip
                            
                            cp -f mkconfig.inc datalib.glb %GAMSDIR%datalib_ml
                            unzip -o $WORKSPACE/cmex_deg.zip
                            hdiutil detach -verbose $DMG_ROOT
                            cd installer/macOS

                            #hdiutil convert $DMG_NAME -format UDRO -o $DMG_NAME_FINAL
                            #rm $DMG_NAME
                            mv $DMG_NAME $DMG_NAME_FINAL
                        '''
                    }
                }
            }
        }
        stage('Sign') {
            steps {
                parallel macos: {
                    node('macos') {
                      withCredentials([string(credentialsId: '2e590f95-5e30-4101-93be-31a1b7402da4', variable: 'MACOS_KEYCHAIN_PASSWD')]) {
                            sh '''
                                MIRO_VERSION=$(grep -m 1 -e "^MIROVersion" app.R | cut -f3 -d" " | xargs)
                                DMG_NAME_FINAL="GAMS_MIRO-${MIRO_VERSION}.dmg"
                                
                                security unlock-keychain -p ${MACOS_KEYCHAIN_PASSWD}
                                codesign -s DP4M4YHKF2 $DMG_NAME_FINAL --force --verbose
                                security lock-keychain
                            '''
                            sh '''
                                codesign --verify --verbose "src/bin/GAMS Studio.app"
                            '''
                        }
                        archiveArtifacts artifacts: '**/GAMS_MIRO-*.dmg', fingerprint: true
                    }
                  }
                }
            }
    }
}
